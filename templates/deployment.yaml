{{- $apiVersion := include "deployment.apiVersion" . -}}

{{- $chartName := include "project-mcms.chart" . -}}
{{- $chartVersion := .Chart.AppVersion -}}

{{- $releaseName := .Release.Name -}}
{{- $releaseService := .Release.Service -}}
{{- $releaseNamespace := .Release.Namespace -}}

{{- $replicas := .Values.global.replicaCount -}}

{{- $prometheusImage := include "prometheus.image" . -}}
{{- $imagePullSecrets := .Values.global.image.pullSecrets -}}
{{- $imagePullPolicy := default "" .Values.global.image.pullPolicy -}}

{{- $resources := toYaml .Values.resources -}}

{{- $livenessProbeInitialDelaySeconds := .Values.livenessProbe.initialDelaySeconds -}}
{{- $livenessProbePeriodSeconds := .Values.livenessProbe.periodSeconds -}}
{{- $livenessProbeTimeoutSeconds := .Values.livenessProbe.timeoutSeconds -}}
{{- $livenessProbeSuccessThreshold := .Values.livenessProbe.successThreshold -}}
{{- $livenessProbeFailureThreshold := .Values.livenessProbe.failureThreshold -}}

{{- $readinessProbeInitialDelaySeconds := .Values.readinessProbe.initialDelaySeconds -}}
{{- $readinessProbePeriodSeconds := .Values.readinessProbe.periodSeconds -}}
{{- $readinessProbeTimeoutSeconds := .Values.readinessProbe.timeoutSeconds -}}
{{- $readinessProbeSuccessThreshold := .Values.readinessProbe.successThreshold -}}
{{- $readinessProbeFailureThreshold := .Values.readinessProbe.failureThreshold -}}

{{- $securityContext := .Values.securityContext -}}

{{- $targetPort := default 9106 .Values.service.targetPort -}}

{{- $secretName := include "aws.secret.name" . -}}

{{- $exportersPath := .Files.Glob "files/exporters/*.{yml,yaml}" -}}
{{- if .Values.providers.aws.exporters }}
{{- range .Values.providers.aws.exporters }}
{{- $name := .name }}
{{- if .enabled }}
---
apiVersion: {{ $apiVersion }}
kind: Deployment
metadata:
  name: {{ $name }}
  namespace: {{ $releaseNamespace }}
  labels:
    helm.sh/chart: {{ $chartName }}
    app.kubernetes.io/name: {{ $name }}
    app.kubernetes.io/instance: {{ $releaseName }}
    {{- if $chartVersion }}
    app.kubernetes.io/version: {{ $chartVersion | quote }}
    {{- end }}
    app.kubernetes.io/managed-by: {{ $releaseService }}
spec:
  replicas: {{ $replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $name }}
      app.kubernetes.io/instance: {{ $releaseName }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $name }}
        app.kubernetes.io/instance: {{ $releaseName }}
    spec:
      imagePullSecrets: 
        - name: {{ $imagePullSecrets }}
      containers:
        - name: {{ $name }}
          image: {{ $prometheusImage }}
          imagePullPolicy: {{ $imagePullPolicy }}
          resources:
{{ $resources | indent 12 }}
          env:
            - name: PORT
              value: {{ $targetPort | quote }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: aws-access-key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: aws-secret-key
          livenessProbe:
            httpGet:
              path: /api/aws/{{ $name }}/-/healthy
              port: {{ $targetPort }}
            initialDelaySeconds: {{ $livenessProbeInitialDelaySeconds }}
            periodSeconds: {{ $livenessProbePeriodSeconds }}
            timeoutSeconds: {{ $livenessProbeTimeoutSeconds }}
            successThreshold: {{ $livenessProbeSuccessThreshold }}
            failureThreshold: {{ $livenessProbeFailureThreshold }}
          readinessProbe:
            httpGet:
              path: /api/aws/{{ $name }}/-/ready
              port: {{ $targetPort }}
            initialDelaySeconds: {{ $readinessProbeInitialDelaySeconds }}
            periodSeconds: {{ $readinessProbePeriodSeconds }}
            timeoutSeconds: {{ $readinessProbeTimeoutSeconds }}
            successThreshold: {{ $readinessProbeSuccessThreshold }}
            failureThreshold: {{ $readinessProbeFailureThreshold }}
          ports:
            - containerPort: {{ $targetPort }}
          {{- if .config }}
          volumeMounts:
            - name: {{ $name }}-configmap
              mountPath: /config/config.yml
              readOnly: true
              subPath: config.yml
      volumes:
        - name: {{ $name }}-configmap
          configMap:
            name: {{ $name }}-configmap
            defaultMode: 420
          {{- else if and $exportersPath (not (.config)) }}
          {{- range $path, $bytes := $exportersPath }}
          {{- $file := base $path | replace ".yml" "" | replace ".yaml" "" -}}
          {{- if eq $file $name }}
          volumeMounts:
            - name: {{ $file }}-external-configmap
              mountPath: /config/config.yml
              readOnly: true
              subPath: config.yml
      volumes:
        - name: {{ $file }}-external-configmap
          configMap:
            name: {{ $file }}-external-configmap
            defaultMode: 420   
          {{- end }}
          {{- end }}
          {{- end }}
      {{- with $securityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
      {{- end }}
{{- end }}
{{- end }}
{{- end }}
---
